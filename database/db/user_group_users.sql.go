// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: user_group_users.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const newUserGroupUser = `-- name: NewUserGroupUser :exec
INSERT INTO
	management.user_group_users (
		user_group_id,
		user_id
	)
VALUES
	($1, $2)
ON CONFLICT (
	user_group_id,
	user_id
) DO NOTHING
`

type NewUserGroupUserParams struct {
	UserGroupID uuid.UUID `json:"userGroupId"`
	UserID      uuid.UUID `json:"userId"`
}

func (q *Queries) NewUserGroupUser(ctx context.Context, arg NewUserGroupUserParams) error {
	_, err := q.db.Exec(ctx, newUserGroupUser, arg.UserGroupID, arg.UserID)
	return err
}

const removeUserGroupUser = `-- name: RemoveUserGroupUser :exec
DELETE FROM management.user_group_users
WHERE
	user_group_id = $1
	AND user_id = $2
`

type RemoveUserGroupUserParams struct {
	UserGroupID uuid.UUID `json:"userGroupId"`
	UserID      uuid.UUID `json:"userId"`
}

func (q *Queries) RemoveUserGroupUser(ctx context.Context, arg RemoveUserGroupUserParams) error {
	_, err := q.db.Exec(ctx, removeUserGroupUser, arg.UserGroupID, arg.UserID)
	return err
}
